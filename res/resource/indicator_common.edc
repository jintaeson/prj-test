/*
 * Copyright 2016  Samsung Electronics Co., Ltd
 *
 * Licensed under the Flora License, Version 1.1 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://floralicense.org/license/
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include "color_classes.edc"

#define TEMP_SWALLOW_PART_FROM_LEFT( partName, rel_x, rel_y, MaxWidth, MaxHeight) \
			part { \
				name: partName; \
				type: SWALLOW; \
				mouse_events: 0; \
				scale: 1; \
				description { \
					state: "default" 0.0; \
					max: MaxWidth MaxHeight; \
					fixed: 1 1; \
					rel1 { relative: 1.0 0.0; to_x: rel_x; to_y: rel_y; } \
					rel2 { relative: 1.0 1.0; to_x: rel_x; to_y: rel_y; } \
					align: 0.5 0.5; \
					visible: 1; \
				} \
			} \

#define SWALLOW_PART_FROM_LEFT( partName, rel_x, rel_y, MaxWidth, MaxHeight) \
			part { \
				name: partName; \
				type: SWALLOW; \
				mouse_events: 0; \
				scale: 1; \
				description { \
					state: "default" 0.0; \
					max: MaxWidth MaxHeight; \
					fixed: 1 1; \
					rel1 { relative: 1.0 0.0; to_x: rel_x; to_y: rel_y; } \
					rel2 { relative: 1.0 1.0; to_x: rel_x; to_y: rel_y; } \
					align: 0.0 0.5; \
					visible: 1; \
				} \
			} \

#define SWALLOW_PART_FROM_LEFT_WITH_SPACE( partName, rel_x, rel_y, MaxWidth, MaxHeight) \
			part {\
			  name : "rect."partName; \
			  type : RECT;\
			  scale : 1;\
			  description {\
			     state : "default" 0.0;\
			     rel1.to : partName;\
			     rel2.to : partName;\
			     color : 0 0 0 0;\
			  }\
			}\
			part { \
				name: partName; \
				type: SWALLOW; \
				scale: 1; \
				description { \
					state: "default" 0.0; \
					max: MaxWidth MaxHeight; \
					fixed: 1 1; \
					rel1 { relative: 1.0 0.0; to_x: rel_x; to_y: rel_y; } \
					rel2 { relative: 1.0 1.0; to_x: rel_x; to_y: rel_y; } \
					align: 0.0 0.5; \
					visible: 1; \
				} \
				description { \
					state: "hide" 0.0; \
					inherit: "default"; \
					visible: 0; \
				} \
			} \

#define SWALLOW_PART_FROM_LEFT_WITH_SPACE_AND_CONSTRICTION( partName, rel_x, rel_y, MaxWidth, MaxHeight) \
			part {\
			  name : "rect."partName; \
			  type : RECT;\
			  scale : 1;\
			  description {\
			     state : "default" 0.0;\
			     rel1.to : partName;\
			     rel2.to : partName;\
			     color : 0 0 0 0;\
			  }\
			}\
			part { \
				name: partName; \
				type: SWALLOW; \
				scale: 1; \
				description { \
					state: "default" 0.0; \
					max: MaxWidth MaxHeight; \
					fixed: 1 1; \
					rel1 { relative: 1.0 0.0; to_x: rel_x; to_y: rel_y; } \
					rel2 { relative: 1.0 1.0; to_x: rel_x; to_y: rel_y; } \
					align: 0.0 0.5; \
					visible: 1; \
				} \
				description { \
					state: "hide" 0.0; \
					inherit: "default"; \
					visible: 0; \
				} \
			} \

#define SWALLOW_PART_FROM_RIGHT( partName, rel_x, rel_y, MaxWidth, MaxHeight) \
			part { \
				name: partName; \
				type: SWALLOW; \
				scale: 1; \
				description { \
					state: "default" 0.0; \
					max: MaxWidth MaxHeight; \
					fixed: 1 1; \
					rel1 { relative: 0.0 0.0; to_x: rel_x; to_y: rel_y; } \
					rel2 { relative: 0.0 1.0; to_x: rel_x; to_y: rel_y; } \
					align: 1.0 0.5; \
					visible: 1; \
				} \
			} \

#define SWALLOW_PART_FROM_RIGHT_WITH_SPACE( partName, rel_x, rel_y, MaxWidth, MaxHeight) \
			part { \
				name: partName; \
				type: SWALLOW; \
				scale: 1; \
				description { \
					state: "default" 0.0; \
					max: MaxWidth MaxHeight; \
					fixed: 1 1; \
					rel1 { relative: 0.0 0.0; to_x: rel_x; to_y: rel_y; } \
					rel2 { relative: 0.0 1.0; to_x: rel_x; to_y: rel_y; } \
					align: 1.0 0.5; \
					visible: 1; \
				} \
				description { \
					state: "hide" 0.0; \
					inherit: "default"; \
					visible: 0; \
				} \
			} \

#define FIXED_RECT_FROM_LEFT( rectName, rel_x, rel_y, MaxWidth, colorValue, visibleValue) \
			part { \
				name: rectName; \
				type: RECT; \
				mouse_events: 0; \
				scale: 1; \
				description { \
					state: "default" 0.0; \
					max: MaxWidth -1; \
					fixed: 1 0; \
					rel1 { relative: 1.0 0.0; to_x: rel_x; to_y: rel_y; } \
					rel2 { relative: 1.0 1.0; to_x: rel_x; to_y: rel_y; } \
					align: 0.0 0.5; \
					color : colorValue; \
					visible: visibleValue; \
				} \
				description { \
					state: "hide" 0.0; \
					inherit: "default" 0.0; \
					visible: 0; \
				} \
			} \

#define FIXED_RSSI_RECT_FROM_LEFT_WITH_CONSTRICTION( rectName, rel_x, rel_y, MaxWidth, MaxHeight, colorValue, visibleValue) \
			part { \
				name: rectName; \
				type: RECT; \
				mouse_events: 0; \
				scale: 1; \
				description { \
					state: "default" 0.0; \
					max: MaxWidth -1; \
					fixed: 1 0; \
					rel1 { relative: 1.0 0.0; to_x: rel_x; to_y: rel_y; } \
					rel2 { relative: 1.0 1.0; to_x: rel_x; to_y: rel_y; } \
					align: 0.0 0.5; \
					color : colorValue; \
					visible: visibleValue; \
				} \
				description { \
					state: "hide" 0.0; \
					inherit: "default" 0.0; \
					max: 0 MaxHeight; \
					visible: 0; \
				} \
			} \

#define FIXED_RECT_FROM_RIGHT( rectName, rel_x, rel_y, MaxWidth, colorValue, visibleValue) \
			part { \
				name: rectName; \
				type: RECT; \
				mouse_events: 0; \
				scale: 1; \
				description { \
					state: "default" 0.0; \
					max: MaxWidth -1; \
					fixed: 1 0; \
					rel1 { relative: 0.0 0.0; to_x: rel_x; to_y: rel_y; } \
					rel2 { relative: 0.0 1.0; to_x: rel_x; to_y: rel_y; } \
					align: 1.0 0.5; \
					color : colorValue; \
					visible: visibleValue; \
				} \
				description { \
					state: "hide" 0.0; \
					inherit: "default" 0.0; \
					min: 0 0; \
					visible: 0; \
				} \
			} \

#define PART_SWALLOW_SET( partName, lPadding, rPadding) \
			part { \
				name: partName; \
				type: SWALLOW; \
				scale: 1; \
				description { \
					state: "default" 0.0; \
					rel1 { relative: 1.0 0.0; to: lPadding; } \
					rel2 { relative: 0.0 1.0; to: rPadding; } \
					align: 0.5 0.5; \
				} \
				description { \
					state: "rotate_120" 0.0; \
					inherit: "default" 0.0; \
				} \
				description { \
					state: "rotate_60" 0.0; \
					inherit: "default" 0.0; \
				} \
				description { \
					state: "rotate_180" 0.0; \
					inherit: "default" 0.0; \
				} \
				description { \
					state: "rotate_240" 0.0; \
					inherit: "default" 0.0; \
				} \
				description { \
					state: "rotate_300" 0.0; \
					inherit: "default" 0.0; \
				} \
				description { \
					state: "invisible" 0.0; \
					inherit: "default" 0.0; \
					visible: 0; \
				} \
			} \

#define PROGRAM_SET( sourceName, targetName) \
			program { name: "icon_default_pre"; \
				action: ACTION_STOP; \
				target: "icon_blink_show"; \
				target: "icon_blink_hide"; \
				target: "icon_rotate_60"; \
				target: "icon_rotate_120"; \
				target: "icon_rotate_180"; \
				target: "icon_rotate_240"; \
				target: "icon_rotate_300"; \
				target: "icon_rotate_0"; \
			} \
			program { name: "icon_default"; \
				signal: "icon,state,default"; \
				source: sourceName; \
				action:  STATE_SET "default" 0.0; \
				target: targetName; \
				after: "icon_default_pre"; \
			} \
			program { name: "icon_blink_show"; \
				action:  STATE_SET "default" 0.0; \
				target: targetName; \
				in: 0.4 0.0; \
				after: "icon_blink_hide"; \
			} \
			program { name: "icon_blink_hide"; \
				action:  STATE_SET "invisible" 0.0; \
				target: targetName; \
				in: 0.4 0.0; \
				after: "icon_blink_show"; \
			} \
			program { name: "icon_blink"; \
				signal: "icon,state,blink"; \
				source: sourceName; \
				action:  STATE_SET "default" 0.0; \
				target: targetName; \
				after: "icon_blink_hide"; \
			} \
			program { name: "icon_rotate_0"; \
				action:  STATE_SET "default" 0.0; \
				target: targetName; \
				in: 0.4 0.0; \
				after: "icon_rotate_60"; \
			} \
			program { name: "icon_rotate_60"; \
				action:  STATE_SET "rotate_60" 0.0; \
				target: targetName; \
				in: 0.4 0.0; \
				after: "icon_rotate_120"; \
			} \
			program { name: "icon_rotate_120"; \
				action:  STATE_SET "rotate_120" 0.0; \
				target: targetName; \
				in: 0.4 0.0; \
				after: "icon_rotate_180"; \
			} \
			program { name: "icon_rotate_180"; \
				action:  STATE_SET "rotate_180" 0.0; \
				target: targetName; \
				in: 0.4 0.0; \
				after: "icon_rotate_240"; \
			} \
			program { name: "icon_rotate_240"; \
				action:  STATE_SET "rotate_240" 0.0; \
				target: targetName; \
				in: 0.4 0.0; \
				after: "icon_rotate_300"; \
			} \
			program { name: "icon_rotate_300"; \
				action:  STATE_SET "rotate_300" 0.0; \
				target: targetName; \
				in: 0.4 0.0; \
				after: "icon_rotate_0"; \
			} \
			program { name: "icon_rotate"; \
				signal: "icon,state,rotate"; \
				source: sourceName; \
				action:  STATE_SET "default" 0.0; \
				target: targetName; \
				after : icon_rotate_0; \
			} \
